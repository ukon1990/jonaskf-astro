---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import FormattedDate from '../components/FormattedDate.astro';
import portrait from '../assets/headshot.jpeg';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import { getTechDisplayName } from '../data/tech';

const experiences = (await getCollection('cv'))
  .filter((entry) => !entry.data.draft)
  .sort((a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf())
  .slice(0, 3);

const posts = (await getCollection('blog'))
  .filter((entry) => !entry.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

const formatPeriod = (start: Date, end?: Date | null) => {
  const formatter = new Intl.DateTimeFormat('en', {
    year: 'numeric',
    month: 'short',
  });
  const startLabel = formatter.format(start);
  const endLabel = end ? formatter.format(end) : 'Present';
  return `${startLabel} – ${endLabel}`;
};
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      .hero {
        display: grid;
        grid-template-columns: minmax(0, 3fr) minmax(0, 2fr);
        gap: 2rem;
        align-items: center;
      }
      .hero h1 {
        margin-bottom: 1rem;
      }
      .hero p {
        margin: 0 0 1rem 0;
      }
      .hero__content {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
      .hero__figure {
        justify-self: end;
        border-radius: 16px;
        overflow: hidden;
        max-width: 280px;
        box-shadow: var(--box-shadow);
      }
      .hero__figure :global(img) {
        display: block;
        width: 100%;
        height: auto;
      }
      .contact {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem 2rem;
      }
      .contact a {
        font-weight: 600;
      }
      .section-header {
        display: flex;
        align-items: baseline;
        justify-content: space-between;
        gap: 1rem;
      }
      .section-header a {
        font-size: 0.95rem;
        font-weight: 600;
      }
      .experience-list,
      .post-list {
        display: grid;
        gap: 1.5rem;
      }
      .card h3 {
        margin-bottom: 0.35rem;
      }
      .summary {
        margin-top: 0.75rem;
        margin-bottom: 0;
      }
      .tags {
        margin: 1rem 0 0 0;
      }
      @media (max-width: 960px) {
        .hero {
          grid-template-columns: 1fr;
        }
        .hero__figure {
          justify-self: center;
        }
        .section-header {
          flex-direction: column;
          align-items: flex-start;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main class="page-shell page-grid page-grid--xl">
      <section class="hero" aria-labelledby="home-intro">
        <article class="hero__content">
          <h1 id="home-intro">Hey, I'm Jonas Munthe Flønes.</h1>
          <p>
            I am a full-stack developer with a bachelor’s degree in Information Systems,
            specializing in web development from the University College of Østfold. My main focus is
            on building modern web applications — from rich, interactive front ends in Angular or
            React to robust back-end services with Spring Boot in Kotlin or AWS Lambda with
            Node.js/TypeScript.
          </p>
          <p>
            I enjoy optimizing systems and creating the best possible experience for users.
            Problem-solving is one of the main reasons I love this field, and I thrive when
            collaborating with others to find smart, practical solutions.
          </p>
          <p>
            Outside of work, I often spend time on hobby projects, but I also enjoy relaxing with
            video games or a good movie.
          </p>
        </article>
        <figure class="hero__figure">
          <Image src={portrait} width={360} height={360} alt="Portrait" />
        </figure>
      </section>

      <section>
        <div class="section-header">
          <h2>Experience highlights</h2>
          <a href="/cv">See every engagement →</a>
        </div>
        <ul class="list-reset experience-list">
          {
            experiences.map((experience) => (
              <li class="card">
                <a class="card-link" href={`/cv/${experience.id}/`}>
                  <h3>{experience.data.title}</h3>
                  <p class="meta">
                    {experience.data.customer && <span>{experience.data.customer}</span>}
                    {experience.data.customer && ' · '}
                    {formatPeriod(experience.data.startDate, experience.data.endDate)}
                  </p>
                  <p class="meta">
                    {experience.data.role}
                    {experience.data.employer && ` · ${experience.data.employer}`}
                  </p>
                  <p class="meta">
                    {experience.data.capacity === 'hobby'
                      ? 'Hobby project'
                      : 'Professional engagement'}
                  </p>
                  <p class="summary">{experience.data.summary}</p>
                  {experience.data.tech.length > 0 && (
                    <ul class="tags">
                      {experience.data.tech.slice(0, 4).map((tag) => (
                        <li>{getTechDisplayName(tag)}</li>
                      ))}
                    </ul>
                  )}
                </a>
              </li>
            ))
          }
        </ul>
      </section>

      {
        posts.length > 0 && (
          <section>
            <div class="section-header">
              <h2>Latest writing</h2>
              <a href="/blog">Browse the blog →</a>
            </div>
            <ul class="list-reset post-list">
              {posts.map((post) => (
                <li class="card">
                  <a class="card-link" href={`/blog/${post.id}/`}>
                    <p class="meta">
                      <FormattedDate date={post.data.pubDate} />
                    </p>
                    <h3>{post.data.title}</h3>
                    <p class="summary">{post.data.description}</p>
                  </a>
                </li>
              ))}
            </ul>
          </section>
        )
      }
    </main>
    <Footer />
  </body>
</html>
